local mod = get_mod("slots")

mod:dofile("scripts/mods/slots/slots-logic/slot_helpers")
mod:dofile("scripts/mods/slots/slots-logic/slot_hooks")
mod:dofile("scripts/mods/slots/slots-logic/slot_functions")
mod:dofile("scripts/mods/slots/debug-drawer/debug_drawer")
local debuggers = mod:dofile("scripts/mods/slots/slots-logic/ai_slot_system")
local debug_draw_slots = debuggers.debug_draw_slots
local game_ai_slot_system = mod:dofile("scripts/entity_system/systems/ai/ai_slot_system")
local game_ai_slot_system_2 = mod:dofile("scripts/entity_system/systems/ai/ai_slot_system_2")

-- Enable debug visualizer
local enabled = false

local function apply_slot_settings()
    -- Reload custom slot settings
    package.loaded["scripts/mods/slots/custom-slot-settings/custom_slot_settings"] = nil
    local custom_slot_settings = require("scripts/mods/slots/custom-slot-settings/custom_slot_settings")

    -- Update the settings
    SlotSettings = SlotSettings or {}
    SlotTypeSettings = SlotTypeSettings or {}

    table.merge_recursive(SlotSettings, custom_slot_settings)

    mod:echo("Applied slot settings:")
    debug_print_table(SlotSettings, "SlotSettings")
end

local function reinitialize_slot_systems()
    game_ai_slot_system_2.init
end

local function reinitialize_debugger()
    local t = Managers.time:time("main")
    local target_units = game_ai_slot_system_2.target_units
    local unit_extension_data = game_ai_slot_system_2.unit_extension_data
    local nav_world = game_ai_slot_system_2.nav_world

    debug_draw_slots(target_units, unit_extension_data, nav_world, t)
end

mod:hook_safe(Boot, "game_update", function(_, real_world_dt)
    if enabled then
        reinitialize_debugger()
    end
end)

-- Apply settings on mod initialization and when settings change
mod.on_all_mods_loaded = function()
    apply_slot_settings()
    reinitialize_slot_systems()
end

mod.on_setting_changed = function(setting_name)
    apply_slot_settings()
    reinitialize_slot_systems()
    reinitialize_debugger()
end

-- COMMANDS
mod:command("debug_slots", "Enable the Slot Debug UI", function()
    enabled = not enabled

    script_data.disable_debug_draw = not enabled
    Development._hardcoded_dev_params.disable_debug_draw = not enabled

    reinitialize_debugger()
end)
